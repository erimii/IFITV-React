version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: ifitv-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [ifitv-net]

  backend:
    build: ./backend
    container_name: ifitv-backend
    restart: always
    env_file: [.env]
    environment:
      - DB_HOST=db
      - IS_DOCKER=1
    command: >
      sh -c "until mysqladmin ping --protocol=TCP -h db --silent;
      do echo '⏳ waiting for db...'; sleep 2; done &&
      gunicorn ifitv.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
    expose: ["8000"]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app              # 전체 backend를 mount
      - ./backend/data:/app/data    # 추천 모델용 csv 경로도 따로 mount (명시적)
    networks: [ifitv-net]




  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ifitv-frontend
    restart: always
    ports:
      - "80:80"

    depends_on:
      - backend

    networks: [ifitv-net]

volumes:
  mysql_data:

networks:
  ifitv-net:
